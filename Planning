# Views, routes, etc

## Views/templates
* / - index page - texttemplate
* /users/login - login page, login field with email, password, remember me
* /users/create - registration page, email, password (cleartext), display name. JavaScript to validate the password rules and supplement email type. Security question (free text field) + answer. Blurb about protecting email, not sharing email, securing the password (and note about how it's partly to put them into good habits!), and that after registration they're recommended to fill out their profile a bit more thoroughly.
* /users - list of users, showing their gravatar (default before filled out), display name and link to profile
* /users/view - Singular user,

php composer_components/bin/phpdoc.php -d app/controllers,app/library,app/models -t documentation/php

sudo apt-get install graphviz php5-xsl

TODO: Fix phpDocumentator so it doesn't have a seizure on lack of vendor-directory...

Input: Purifier to clean
Output: Purifier, Markdown, SmartyPants

* Never connect to the database as a superuser or as the database owner. Use always customized users with very limited privileges
* If the application waits for numerical input, consider verifying data with ctype_digit(), or silently change its type using settype(), or use its numeric representation by sprintf().
*Check if the given input has the expected data type. PHP has a wide range of input validating functions, from the simplest ones found in Variable Functions and in Character Type Functions (e.g. is_numeric(), ctype_digit() respectively) and onwards to the Perl compatible Regular Expressions support.
*http://www.php.net/manual/en/pdo.prepared-statements.php




